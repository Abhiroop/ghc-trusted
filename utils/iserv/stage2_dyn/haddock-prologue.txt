GHC can be provided with a path to the iserv binary with
@-pgmi=/path/to/iserv-bin@, and will in combination with
@-fexternal-interpreter@, compile Template Haskell though the
@iserv-bin@ delegate. This is very similar to how ghcjs has been
compiling Template Haskell, by spawning a separate delegate (so
called runner on the javascript vm) and evaluating the splices
there.

To use iserv with cross compilers, please see @libraries/libiserv@
and @utils/iserv-proxy@.