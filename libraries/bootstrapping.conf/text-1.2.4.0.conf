name: text
version: 1.2.4.0
id: text-1.2.4.0
key: text-1.2.4.0
license: BSD-2-Clause
copyright: 2009-2011 Bryan O'Sullivan, 2008-2009 Tom Harper
maintainer: Bryan O'Sullivan <bos@serpentine.com>, Herbert Valerio Riedel <hvr@gnu.org>
author: Bryan O'Sullivan <bos@serpentine.com>
homepage: https://github.com/haskell/text
synopsis: An efficient packed Unicode text type.
description:
    An efficient packed, immutable Unicode text type (both strict and
    lazy), with a powerful loop fusion optimization framework.
    The 'Text' type represents Unicode character strings, in a time and
    space-efficient manner. This package provides text processing
    capabilities that are optimized for performance critical use, both
    in terms of large data quantities and high speed.
    The 'Text' type provides character-encoding, type-safe case
    conversion via whole-string case conversion functions (see "Data.Text").
    It also provides a range of functions for converting 'Text' values to
    and from 'ByteStrings', using several standard encodings
    (see "Data.Text.Encoding").
    Efficient locale-sensitive support for text IO is also supported
    (see "Data.Text.IO").
    These modules are intended to be imported qualified, to avoid name
    clashes with Prelude functions, e.g.
    > import qualified Data.Text as T
    == ICU Support
    To use an extended and very rich family of functions for working
    with Unicode text (including normalization, regular expressions,
    non-standard encodings, text breaking, and locales), see
    the [text-icu package](https://hackage.haskell.org/package/text-icu)
    based on the well-respected and liberally
    licensed [ICU library](http://site.icu-project.org/).
    == Internal Representation: UTF-16 vs. UTF-8
    Currently the @text@ library uses UTF-16 as its internal representation
    which is [neither a fixed-width nor always the most dense representation](http://utf8everywhere.org/)
    for Unicode text. We're currently investigating the feasibility
    of [changing Text's internal representation to UTF-8](https://github.com/text-utf8)
    and if you need such a 'Text' type right now you might be interested in using the spin-off
    packages <https://hackage.haskell.org/package/text-utf8 text-utf8> and
    <https://hackage.haskell.org/package/text-short text-short>.
category: Data, Text
abi: inplace
exposed: True
exposed-modules:
    Data.Text Data.Text.Array Data.Text.Encoding
    Data.Text.Encoding.Error Data.Text.Foreign Data.Text.IO
    Data.Text.Internal Data.Text.Internal.Builder
    Data.Text.Internal.Builder.Functions
    Data.Text.Internal.Builder.Int.Digits
    Data.Text.Internal.Builder.RealFloat.Functions
    Data.Text.Internal.Encoding.Fusion
    Data.Text.Internal.Encoding.Fusion.Common
    Data.Text.Internal.Encoding.Utf16 Data.Text.Internal.Encoding.Utf32
    Data.Text.Internal.Encoding.Utf8 Data.Text.Internal.Functions
    Data.Text.Internal.Fusion Data.Text.Internal.Fusion.CaseMapping
    Data.Text.Internal.Fusion.Common Data.Text.Internal.Fusion.Size
    Data.Text.Internal.Fusion.Types Data.Text.Internal.IO
    Data.Text.Internal.Lazy Data.Text.Internal.Lazy.Encoding.Fusion
    Data.Text.Internal.Lazy.Fusion Data.Text.Internal.Lazy.Search
    Data.Text.Internal.Private Data.Text.Internal.Read
    Data.Text.Internal.Search Data.Text.Internal.Unsafe
    Data.Text.Internal.Unsafe.Char Data.Text.Internal.Unsafe.Shift
    Data.Text.Lazy Data.Text.Lazy.Builder Data.Text.Lazy.Builder.Int
    Data.Text.Lazy.Builder.RealFloat Data.Text.Lazy.Encoding
    Data.Text.Lazy.IO Data.Text.Lazy.Internal Data.Text.Lazy.Read
    Data.Text.Read Data.Text.Unsafe
hidden-modules: Data.Text.Show
import-dirs: /home/abhir00p/ghc-8.8.2/libraries/text/dist-boot/build
library-dirs: /home/abhir00p/ghc-8.8.2/libraries/text/dist-boot/build
dynamic-library-dirs: /home/abhir00p/ghc-8.8.2/libraries/text/dist-boot/build
data-dir: /home/abhir00p/ghc-8.8.2/libraries/text
hs-libraries: HStext-1.2.4.0
include-dirs: /home/abhir00p/ghc-8.8.2/libraries/text/include
              /home/abhir00p/ghc-8.8.2/libraries/text/dist-boot/build/include
              /home/abhir00p/ghc-8.8.2/libraries/text/dist-boot/build/include
              /home/abhir00p/ghc-8.8.2/libraries/text/dist-boot/build/dist-boot/build/include
depends:
    array-0.5.3.0 base-4.12.0.0 binary-0.8.7.0 bytestring-0.10.8.2
    deepseq-1.4.4.0 ghc-prim-0.5.3 integer-gmp-1.0.2.0
    template-haskell-2.15.0.0
haddock-interfaces: /home/abhir00p/ghc-8.8.2/libraries/text/dist-boot/doc/html/text/text.haddock
haddock-html: /home/abhir00p/ghc-8.8.2/libraries/text/dist-boot/doc/html/text
